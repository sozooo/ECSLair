//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Project.Scripts.EntityComponents.InputEventComponent inputEvent { get { return (Project.Scripts.EntityComponents.InputEventComponent)GetComponent(GameComponentsLookup.InputEvent); } }
    public bool hasInputEvent { get { return HasComponent(GameComponentsLookup.InputEvent); } }

    public void AddInputEvent(UnityEngine.Vector2 newDirection) {
        var index = GameComponentsLookup.InputEvent;
        var component = (Project.Scripts.EntityComponents.InputEventComponent)CreateComponent(index, typeof(Project.Scripts.EntityComponents.InputEventComponent));
        component.Direction = newDirection;
        AddComponent(index, component);
    }

    public void ReplaceInputEvent(UnityEngine.Vector2 newDirection) {
        var index = GameComponentsLookup.InputEvent;
        var component = (Project.Scripts.EntityComponents.InputEventComponent)CreateComponent(index, typeof(Project.Scripts.EntityComponents.InputEventComponent));
        component.Direction = newDirection;
        ReplaceComponent(index, component);
    }

    public void RemoveInputEvent() {
        RemoveComponent(GameComponentsLookup.InputEvent);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherInputEvent;

    public static Entitas.IMatcher<GameEntity> InputEvent {
        get {
            if (_matcherInputEvent == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.InputEvent);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherInputEvent = matcher;
            }

            return _matcherInputEvent;
        }
    }
}
